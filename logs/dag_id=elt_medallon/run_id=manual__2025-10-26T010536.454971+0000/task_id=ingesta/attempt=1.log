{"timestamp":"2025-10-26T01:05:37.156748","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-10-26T01:05:37.157570","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/elt_medallon.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-10-26T01:06:03.642021","level":"info","event":"Done. Returned value was: ['/opt/airflow/data_lake/raw/datos/MEX/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/MEX/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/MEX/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/MEX/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/MEX/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BRA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BRA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BRA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BRA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BRA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ARG/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ARG/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ARG/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ARG/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ARG/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/USA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/USA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/USA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/USA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/USA/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/COL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/COL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/COL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/COL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/COL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BOL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BOL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BOL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BOL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/BOL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CAN/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CAN/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CAN/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CAN/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CAN/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CHL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CHL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CHL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CHL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/CHL/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ECU/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ECU/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ECU/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ECU/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/ECU/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/PER/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/PER/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/PER/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/PER/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/PER/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/URY/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/URY/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/URY/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/URY/datos_abiertos.json', '/opt/airflow/data_lake/raw/datos/URY/datos_abiertos.json']","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-10-26T01:06:03.642290","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019a1e0c-a4dc-7a09-9b5c-f703a732179c'), task_id='ingesta', dag_id='elt_medallon', run_id='manual__2025-10-26T01:05:36.454971+00:00', try_number=1, map_index=-1, hostname='38ba2017eef5', context_carrier=None, task=<Task(PythonOperator): ingesta>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 26, 1, 5, 37, 105468, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
